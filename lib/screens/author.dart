import '../author_specific_info.dart';

// images/bramStoker.jpg
import 'package:flutter/material.dart';

class AuthorScreen extends StatelessWidget {
  static const route = 'author';

  /////////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////////

  final Orientation landscape = Orientation.landscape,
      portrait = Orientation.portrait;

  @override
  Widget build(BuildContext context) {
    Orientation phoneOrientation = MediaQuery.of(context).orientation;
    AppBar appBar = AppBar(
      title: Text('Author'),
    );
    EdgeInsetsGeometry bodyPadding = phoneOrientation == portrait
        ? EdgeInsets.symmetric(
            vertical: 10,
            horizontal: 20,
          )
        : EdgeInsets.symmetric(horizontal: 25, vertical: 10);
    double fullWidth = MediaQuery.of(context).size.width;
    double fullHeightWithoutAppBar =
        MediaQuery.of(context).size.height - appBar.preferredSize.height;
    final info = ModalRoute.of(context).settings.arguments;
    // print(info);
    /////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////
    return Scaffold(
      appBar: appBar,
      body: Container(
        width: fullWidth,
        height: fullHeightWithoutAppBar,
        decoration: BoxDecoration(
          image: plotWallpaper,
        ),
        child: SingleChildScrollView(
          child: Column(
            children: [
              Container(
                padding: bodyPadding,
                child: Text(
                  info,
                  style: TextStyle(
                    color: Colors.white,
                  ),
                ),
              ),
              Container(
                padding: bodyPadding,
                child: Text(
                  Author().writings,
                  style: TextStyle(
                    color: Colors.white,
                  ),
                ),
              ),
              Padding(
                padding: const EdgeInsets.all(8.0),
                child: Container(
                  decoration: BoxDecoration(
                      color: Colors.grey[800].withOpacity(0.5),
                      borderRadius: BorderRadius.circular(15)),
                  child: ListTile(
                    title: Text('Death',
                        textAlign: TextAlign.center,
                        style: TextStyle(
                            fontFamily: 'medieval',
                            color: Colors.white,
                            fontSize: 35)),
                    subtitle: Container(
                      child: Text(
                        Author().death,
                        style: TextStyle(
                          color: Colors.white,
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////

  final DecorationImage plotWallpaper = DecorationImage(
    colorFilter: new ColorFilter.mode(Colors.black54, BlendMode.darken),
    fit: BoxFit.cover,
    image: AssetImage('images/bramStoker.jpg'),
  );
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////

}
